/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC      &kp Q               &kp W  &kp E              &kp R               &kp T        &kp Y      &kp U         &kp I      &kp O    &kp P                   &kp PIPE
&lt 1 GRAVE  &kp A               &kp S  &kp D              &kp F               &kp G        &kp H      &kp J         &kp K      &kp L    &lt 2 SEMICOLON         &kp SQT
&kp LSHFT    &mt LEFT_CONTROL Z  &kp X  &kp C              &kp V               &kp B        &kp N      &kp M         &kp COMMA  &kp DOT  &mt RIGHT_CONTROL FSLH  &kp BACKSLASH
                                        &kp RA(BACKSPACE)  &mt LGUI BACKSPACE  &kp SPACE    &kp ENTER  &mt RALT TAB  &trans
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans            &kp EXCLAMATION  &kp AT_SIGN  &kp LEFT_BRACE        &kp RIGHT_BRACE             &trans           &trans                   &kp N7        &kp N8        &kp N9        &kp KP_MULTIPLY  &kp KP_DIVIDE
&kp LEFT_COMMAND  &kp HASH         &kp DOLLAR   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS       &trans           &kp RC(LS(KP_NUMBER_4))  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp KP_PLUS      &mt UNDERSCORE KP_SUBTRACT
&kp LEFT_SHIFT    &kp PERCENT      &kp CARET    &kp LEFT_BRACKET      &kp RIGHT_BRACKET           &kp AMPERSAND    &kp TILDE                &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_EQUAL     &kp RIGHT_SHIFT
                                                &kp LA(BACKSPACE)     &mt LEFT_COMMAND BACKSPACE  &kp SPACE        &kp ENTER                &kp NUMBER_0  &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&bt BT_CLR_ALL  &trans        &kp K_COPY       &kp UP_ARROW       &kp K_PASTE  &trans    &trans  &msc SCRL_UP    &mmv MOVE_UP    &msc SCRL_RIGHT  &trans  &trans
&bt BT_SEL 0    &bt BT_SEL 1  &kp LEFT         &kp DOWN           &kp RIGHT    &trans    &trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  &trans
&bt BT_PRV      &bt BT_NXT    &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &kp K_MUTE   &trans    &trans  &mkp MCLK       &trans          &trans           &trans  &trans
                                               &trans             &trans       &trans    &trans  &mkp LCLK       &mkp RCLK
            >;
        };
    };
};
